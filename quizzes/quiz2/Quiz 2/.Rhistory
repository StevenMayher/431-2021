df = tibble(level = factor(c("High", "Low", "Medium")), outcome = 1:3)
ggplot(df, aes(x = outcome)) +
geom_histogram(col = "white", fill = "cornflowerblue") +
facet_wrap(~ level) +
theme_bw()
df = tibble(level = factor(c("High", "Low", "Medium")), outcome = 1:3)
df = df %>%
mutate(level = fct_relevel(level, "High", after = 2))
ggplot(df, aes(x = outcome)) +
geom_histogram(col = "white", fill = "cornflowerblue") +
facet_wrap(~ level) +
theme_bw()
knitr::opts_chunk$set(comment = NA)
library(tidyverse)
library(naniar)
library(broom)
library(knitr)
library(patchwork)
library(magrittr)
library(Epi)
library(dplyr)
library(janitor)
library(Epi)
source("C:/Users/smmay/OneDrive/Education/College/Coursework/CWRU/PQHS 431 - Statistical Methods I/431-data/Love-boost.R")
twobytwo(29, 194, 114, 659, "Diabetic", "Healthy", "acute MI", "No MI", conf.level = 0.9)
twobytwo(95, 160, 60, 185, "Students Accepted", "Students Not Accepted", "Private", "Public", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
twobytwo(95, 155, 160, 345, "Private", "Public", "Students Accepted", "Students Applying", conf.level = 0.95)
twobytwo(95, 160, 60, 185, "Students Accepted", "Students Not Accepted", "Private", "Public", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
View(twobytwo)
twobytwo(95, 160, 60, 185, "Students Accepted", "Students Not Accepted", "Private", "Public", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
View(saifs.ci)
saifs.ci(x = 33, n = 41, conf.level = 0.9)
saifs.ci(x = 33, n = 41, conf.level = 90)
saifs.ci(x = 33, n = 41, conf.level = 0.9)
saifs.ci(x = 33, n = 41, conf.level = 0.9)
saifs.ci(x = 33, n = 41, conf.level = 0.9)
read.csv("data/quiz_beds1.csv")
quiz_beds1 = read.csv("data/quiz_beds1.csv")
quiz_beds1 = read.csv("data/quiz_beds1.csv")
quiz_beds2 = read.csv("data/quiz_beds2.csv")
View(quiz_beds1)
View(quiz_beds2)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, conf.level = 0.90) which
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, conf.level = 0.90)
knitr::opts_chunk$set(echo = TRUE)
library(broom)
library(car)
library(Epi)
library(equatiomatic)
library(glue)
library(ggrepel)
library(Hmisc)
library(janitor)
library(knitr)
library(magrittr)
library(mosaic)
library(naniar)
library(patchwork)
library(pwr)
library(tidyverse)
source("data/Love-boost.R")
theme_set(theme_bw())
df = tibble(level = factor(c("High", "Low", "Medium")), outcome = 1:3)
df = df %>%
mutate(level = fct_relevel(level, "High", after = 2))
ggplot(df, aes(x = outcome)) +
geom_histogram(col = "white", fill = "cornflowerblue") +
facet_wrap(~ level) +
theme_bw()
twobytwo(95, 160, 60, 185, "Students Accepted", "Students Not Accepted", "Private", "Public", conf.level = 0.95)
twobytwo(95, 60, 160, 185, "Private", "Public", "Students Accepted", "Students Not Accepted", conf.level = 0.95)
saifs.ci(x = 33, n = 41, conf.level = 0.9)
quiz_beds1 = read.csv("data/quiz_beds1.csv")
quiz_beds2 = read.csv("data/quiz_beds2.csv")
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.10)
set.seed(4312021); quiz_beds1 %$% bootdif(beds_index, year, conf.level = 0.90)
quiz_beds2 %$% t.test(beds_2010 - beds_2014, conf.level = 0.90)
quiz_beds2 %$% t.test(beds_2010 - beds_2014, sig.level = 0.10)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alphad = 0.10)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.10)
View(bootdif)
View(quiz_beds1)
View(quiz_beds2)
View(quiz_beds2)
quiz_beds2 <- quiz_beds2 %>%
select(state, beds_2010, beds_2014) %>%
mutate(beds_diff = beds_2010 - beds_2014)
View(quiz_beds2)
quiz_beds2 %$% t.test(beds_diff, conf.level = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_diff, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.05)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 1)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.10)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.10)
quiz_beds1 %$% t.test(beds_index ~ year, var.equal = TRUE, alpha = 0.49)
set.seed(4312021); quiz_beds1 %$% bootdif(beds_index, state, conf.level = 0.90)
set.seed(4312021); quiz_beds1 %$% bootdif(beds_index, year ~ state, conf.level = 0.90)
set.seed(4312021); quiz_beds1 %$% bootdif(beds_index, state ~ year, conf.level = 0.90)
set.seed(4312021); quiz_beds1 %$% bootdif(beds_index, year, conf.level = 0.90)
quiz_beds2 %$% t.test(beds_diff, conf.level = 0.95)
quiz_beds2 %$% t.test(beds_diff, conf.level = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
set.seed(4312021); quiz_beds2 %$% smean.cl.boot(beds_2010 - beds_2014, conf = 0.90)
q12 = starwars
View(q12)
View(q12)
q12 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species = "Human")
q12 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human")
View(q12)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human")
method2 <- binom.test(x = 45, n = 96, conf.level = 0.90,
ci.method = "Clopper-Pearson")
tidy2 <- tidy(method2)
tidy2 %>%
select(estimate, conf.low, conf.high, statistic, parameter) kable(dig = 4)
method2 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "Clopper-Pearson")
tidy2 <- tidy(method2)
tidy2 %>%
select(estimate, conf.low, conf.high, statistic, parameter) kable(dig = 4)
method2 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "Clopper-Pearson")
tidy2 <- tidy(method2)
tidy2 %>%
select(estimate, conf.low, conf.high, statistic, parameter) kable(dig = 4)
method2 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "Clopper-Pearson")
tidy2 <- tidy(method2)
tidy2 %>%
select(estimate, conf.low, conf.high, statistic, parameter)
kable(dig = 4)
method2 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "Clopper-Pearson")
tidy2 <- tidy(method2)
tidy2 %>%
select(estimate, conf.low, conf.high, statistic, parameter) %>%
kable(dig = 4)
method3 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "Score")
tidy3 <- tidy(method3)
tidy3 %>%
select(estimate, conf.low, conf.high, statistic, parameter) %>%
kable(dig = 4)
method4 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "agresti-coull")
tidy4 <- tidy(method4)
tidy4 %>%
select(estimate, conf.low, conf.high, statistic, parameter) %>%
kable(dig = 4)
method5 <- binom.test(x = 45, n = 96, conf.level = 0.90, ci.method = "plus4")
tidy5 <- tidy(method5)
tidy5 %>%
select(estimate, conf.low, conf.high, statistic, parameter) %>%
kable(dig = 4)
res2 <- tidy2 %>% select(estimate, conf.low, conf.high)
res3 <- tidy3 %>% select(estimate, conf.low, conf.high)
res4 <- tidy4 %>% select(estimate, conf.low, conf.high)
res5 <- tidy5 %>% select(estimate, conf.low, conf.high)
res <- bind_rows(res2, res3, res4, res5)
res <- res %>% mutate(
approach = c("Clopper-Pearson", "Score",
"Agresti-Coull", "Plus4"))
res2 <- tidy2 %>% select(estimate, conf.low, conf.high)
res3 <- tidy3 %>% select(estimate, conf.low, conf.high)
res4 <- tidy4 %>% select(estimate, conf.low, conf.high)
res5 <- tidy5 %>% select(estimate, conf.low, conf.high)
res <- bind_rows(res2, res3, res4, res5)
res <- res %>% mutate(approach = c("Clopper-Pearson", "Score",
"Agresti-Coull", "Plus4"))
res2 <- tidy2 %>% select(estimate, conf.low, conf.high)
res3 <- tidy3 %>% select(estimate, conf.low, conf.high)
res4 <- tidy4 %>% select(estimate, conf.low, conf.high)
res5 <- tidy5 %>% select(estimate, conf.low, conf.high)
res <- bind_rows(res2, res3, res4, res5)
res <- res %>% mutate(approach = c("Clopper-Pearson", "Score",
"Agresti-Coull", "Plus4"))
res
View(res)
View(res)
res2 <- tidy2 %>% select(estimate, conf.low, conf.high)
res3 <- tidy3 %>% select(estimate, conf.low, conf.high)
res4 <- tidy4 %>% select(estimate, conf.low, conf.high)
res5 <- tidy5 %>% select(estimate, conf.low, conf.high)
res <- bind_rows(res2, res3, res4, res5)
res <- res %>% mutate(approach = c("Clopper-Pearson", "Score",
"Agresti-Coull", "Plus4"))
res = res %>%
mutate(conf.interval = conf.high - conf.low)
View(res)
power.prop.test(p1 = .18, p2 = .24, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 0.6, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 60, alternative = "two.sided", sig.level = 0.05, power = 0.90)
View(q11)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(height_m = height/100) %>%
mutate(bmi = mass/(height_m^2))
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.80)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
set.seed(4312021); q11 %$% bootdif(bmi, sex, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(sex ~ bmi, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi, conf.level = 0.90)
q11 = starwars %>%
filter(complete.cases(height, mass)) %>%
filter(species == "Human") %>%
mutate(bmi = (10000*mass)/(height^2))
q11 %$% t.test(bmi ~ sex, conf.level = 0.90)
power.t.test(delta = 30, sd = 0.6, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 0.3, sd = 0.6, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 60, alternative = "two.sided", sig.level = 0.05, power = 0.90)
mydata = read.csv("data/mydata.csv")
View(q11)
View(mydata)
mydata = read.csv("data/mydata.csv")
mydata %>% mutate(badbp = sbp < 120)
View(mydata)
mydata = read.csv("data/mydata.csv")
mydata$badbp <- ifelse(mydata$sbp >= 120, "YES", "NO")
View(mydata)
mydata = read.csv("data/mydata.csv")
mydata = read.csv("data/mydata.csv")
mydata %>% badbp <- sbp >= 120
mydata = read.csv("data/mydata.csv")
mydata %>% badbp <- sbp >= 120
mydata = read.csv("data/mydata.csv")
mydata %$% badbp <- sbp >= 120
mydata = read.csv("data/mydata.csv")
mydata %>% badbp <- sbp >= 120
mydata = read.csv("data/mydata.csv")
badbp <- mydata %>% filter(sbp >= 120)
pwr.2p2n.test(n1 = 100, n2 = 125, sig.level = 0.05, alternative = "two.sided", power = 0.8)
pwr.2p2n.test(n1 = 100, n2 = 125, sig.level = 0.05, alternative = "two.sided", power = 0.825)
pwr.2p2n.test(n1 = 100, n2 = 125, sig.level = 0.05, alternative = "two.sided")
pwr.2p2n.test(n1 = 100, n2 = 125, sig.level = 0.05, alternative = "two.sided", h = 0.025)
pwr.2p2n.test(n1 = 100, n2 = 125, sig.level = 0.05, alternative = "two.sided", delta = 2.5, sd = 5)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
quiz_hosp = read.csv("data/quiz_hosp.csv")
View(quiz_hosp)
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %>% twoby2(sex, statin)
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %$% twoby2(sex, statin)
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %$% twoby2(sex, statin ~ "YES")
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %$% twoby2(sex, statin == "YES")
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %$% twoby2(sex, statin = "YES")
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %>% sort(statin, decreasing = "TRUE")
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %>% fct_relevel(statin, "YES", "NO")
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp %$% fct_relevel(statin, "YES", "NO")
quiz_hosp %$% twoby2(sex, statin)
quiz_hosp = read.csv("data/quiz_hosp.csv")
quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
quiz_hosp %$% twoby2(sex, statin)
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
quiz_hosp %$% twoby2(sex, statin)
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin))
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[,2:1])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin))
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[,2:2])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[,2:1])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[,2:1][,1:2])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[,1:2])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[2:1,2:1])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin))
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[2:1,2:1])
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin))
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[2:1,2:1])
twoby2(quiz_hosp %$% table(sex, statin))
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[2:1,2:1], conf.level = 0.95)
quiz_hosp = read.csv("data/quiz_hosp.csv")
#quiz_hosp = quiz_hosp %$% fct_relevel(statin, "YES", "NO")
twoby2(quiz_hosp %$% table(sex, statin)[2:1,2:1])
View(quiz_hosp)
quiz_hosp %>% count(insurance)
q22 = quiz_hosp %>% filter(insurance == "COMMERCIAL" | "MEDICARE")
q22 = quiz_hosp %>% filter(insurance != "MEDICAID")
View(q22)
q22 = quiz_hosp %>%
filter(insurance != "MEDICAID") %>%
filter(insurance != "UNINSURED") %>%
count(insurance)
q22 = quiz_hosp %>%
filter(insurance != "MEDICAID") %>%
filter(insurance != "UNINSURED")
q22 %>% count(insurance)
View(bootdif)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.95)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22 %$% Hmisc::smean.cl.boot(hsgrads, insurance, conf.int = 0.90)
q22 %$% t.test(hsgrads ~ insurance, var.equal = TRUE, conf.level = 0.90)
q22_1 = q22 %>% fct_reorder(insurance, "COMMERICAL", "MEDICARE")
q22_1 = q22 %>% as.factor(insurance)
q22_1 = q22 %$% as.factor(insurance)
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance))
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
View(q22_1)
View(q22)
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
fct_relevel(insurance, "COMMERCIAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
fct_reorder(insurance, "COMMERCIAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
fct_relevel(insurance, "COMMERCIAL")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
fct_relevel(f = insurance, "COMMERCIAL")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %$%
fct_relevel(insurance, "COMMERCIAL")
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %$%
fct_relevel(insurance, "COMMERCIAL", "MEDICARE")
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %$%
fct_relevel(q22_1$insurance, "COMMERCIAL", "MEDICARE")
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %$%
mutate(fct_relevel(insurance, "COMMERCIAL", "MEDICARE"))
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(fct_relevel(insurance, "COMMERCIAL", "MEDICARE"))
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
View(q22_1)
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "COMMERCIAL", "MEDICARE"))
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
View(q22_1)
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "COMMERCIAL"))
#fct_reorder(insurance, "COMMERICAL", "MEDICARE")
View(q22_1)
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_reorder(insurance, "COMMERCIAL", "MEDICARE"))
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "MEDICARE", after = "COMMERCIAL"))
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "MEDICARE", after "COMMERCIAL"))
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "MEDICARE", after == "COMMERCIAL"))
q22_1 = q22 %>%
mutate(insurance = as.factor(insurance)) %>%
mutate(insurance = fct_relevel(insurance, "MEDICARE", after = "COMMERCIAL"))
View(q22_1)
write.csv(q22, "data/q22.csv")
q22_2 = read.csv("data/q22_2.csv")
View(q22_2)
q22_2 %$% t.test(hsgrads ~ insurance, var.equal = TRUE, conf.level = 0.90)
q22 %$% t.test(hsgrads ~ insurance, var.equal = TRUE, conf.level = 0.90)
q22_2 %$% t.test(hsgrads ~ insurance, var.equal = TRUE, conf.level = 0.90)
q22 %$% t.test(hsgrads ~ insurance, var.equal = TRUE, conf.level = 0.90)
set.seed(4312021); q22_2 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22_2 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22_2 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)[,2:1]
set.seed(4312021); q22 %$% bootdif(hsgrads, insurance, conf.level = 0.90)
View(quiz_beds1)
knitr::opts_chunk$set(echo = TRUE)
library(broom)
library(car)
library(Epi)
library(equatiomatic)
library(glue)
library(ggrepel)
library(Hmisc)
library(janitor)
library(knitr)
library(magrittr)
library(mosaic)
library(naniar)
library(patchwork)
library(pwr)
library(tidyverse)
source("data/Love-boost.R")
theme_set(theme_bw())
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.1, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.025, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 29, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 15, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "one.sided", sig.level = 0.05, power = 0.90)
power.t.test(delta = 30, sd = 50, alternative = "two.sided", sig.level = 0.05, power = 0.90)
